---
import { fileTypeValues } from '@/core/consts'
import BaseLayout from '@/layouts/BaseLayout.astro'
import Button from '@/components/atoms/Button.astro'
import Input from '@/components/atoms/Input.astro'
import Label from '@/components/atoms/Label.astro'
import { FileList, FetchButton } from '@/components/solidjs/FileList'
import UserBadge from '@/components/ui/UserBadge.astro'
---

<BaseLayout title="Dashboard">
  <section class="flex w-full items-stretch">
    <div class="hidden md:flex p-2">
      <aside
        class="left-2 top-2 bottom-2 w-[280px] rounded-lg h-full
        bg-gray-300/5 backdrop-blur-md border border-white/10 flex flex-col justify-between"
      >
        <header class="p-3 flex items-center justify-between">
          <h2 class="text-xl font-medium">Archivos</h2>
          <FetchButton client:visible />
        </header>
        <FileList client:load />
        <footer class="p-3">
          <UserBadge />
        </footer>
      </aside>
    </div>

    <div class="grow p-2 flex flex-col">
      <div
        class="border-white/10 rounded-lg bg-black/10 h-full border-3 border-dashed p-4"
      >
        <h1 class="text-2xl font-medium mb-6">Subir archivos</h1>

        <section class="max-w-3xl">
          <div class="space-y-4">
            <h2 class="font-medium text-gray-300">
              Subir apk o aplicaci칩n de escritorio
            </h2>
            <form class="flex flex-col space-y-4" id="upload-file-form">
              <div class="flex flex-col gap-6">
                <Label text="Nombre">
                  <Input
                    name="nombre"
                    type="text"
                    autocomplete="off"
                    placeholder="Apk en alpha version 0.216.58"
                  />
                </Label>

                <label class="flex items-center gap-2">
                  <input type="checkbox" name="visible" />
                  <span class="text-sm select-none">
                    Visible para todos los usuarios
                  </span>
                </label>

                <label
                  class="border-3 border-dashed rounded-2xl p-6 mt-4
                  min-h-36 md:min-h-48 h-full
                  border-white/30 bg-gray-500/5 text-gray-400
                  hover:bg-gray-300/5 hover:text-gray-300
                  transition-colors
                  flex justify-center items-center relative isolate"
                >
                  <span class="font-semibold select-none" id="file-span">
                    Seleccione un archivo
                  </span>
                  <div
                    id="file-message-container"
                    class="hidden rounded shadow p-3 text-sm space-y-2 transition-colors border
                    bg-black/20 text-gray-300 border-white/10
                    hover:bg-black/30 hover:border-white/20"
                  >
                  </div>
                  <input
                    id="app-file-input"
                    name="app_file"
                    type="file"
                    accept=".apk,.msi"
                    hidden
                  />
                </label>
              </div>

              <div class="flex flex-wrap justify-between gap-4">
                <div>
                  <p
                    id="error-message-upff"
                    class="text-sm font-medium text-red-300"
                  >
                  </p>
                  <p
                    id="success-message-upff"
                    class="text-sm font-medium text-green-300"
                  >
                  </p>
                </div>
                <div class="flex flex-wrap gap-4 ml-auto justify-end">
                  <button
                    id="clear-form"
                    type="reset"
                    class="font-semibold border-white/10 rounded-lg border text-sm px-5 py-3 hover:bg-white/10 hover:border-white/30 transition-colors"
                  >
                    Cancelar
                  </button>
                  <Button type="submit">Subir</Button>
                </div>
              </div>
            </form>
          </div>
        </section>
      </div>
    </div>
  </section>
</BaseLayout>

<script>
  import { uploadApk } from '@/core/controllers/archivos'
  import { fileTypeValues, maxFileSizeAllowed } from '@/core/consts'
  import { selectWith } from '@/core/lib/utils'
  import { uploadFileValidator } from '@/core/validators/uploadFileDto'
  ;(async () => {
    const $uploadFileForm = selectWith<HTMLFormElement>('#upload-file-form')
    const $successMessage = selectWith<HTMLFormElement>('#success-message-upff')
    const $errorMessage = selectWith<HTMLFormElement>('#error-message-upff')
    const $fileInput = selectWith<HTMLInputElement>('#app-file-input')
    const $fileSpan = selectWith<HTMLSpanElement>('#file-span')
    const $fileMessageContainer = selectWith<HTMLDivElement>(
      '#file-message-container'
    )

    let selectedFile: null | File = null
    let fileType: string = ''

    $fileInput.addEventListener('change', () => {
      $errorMessage.innerText = ''
      $successMessage.innerText = ''

      requestIdleCallback(() => {
        if ($fileInput.files == null || $fileInput.files[0] == null) {
          $errorMessage.innerText = 'No se ha seleccionado un archivo'
          return
        }

        const [file] = $fileInput.files

        if (file.size > maxFileSizeAllowed) {
          $errorMessage.innerText = `El archivo no puede pesar m치s de 150 MB (peso del archivo actual: ${(file.size / (1024 * 1024)).toFixed(2)} MB)`
          return
        }

        if (file.type === '' && file.name.endsWith('.apk')) {
          selectedFile = new File([file], file.name, {
            type: 'application/vnd.android.package-archive'
          })
          fileType = fileTypeValues.apk
        } else if (file.name.endsWith('.apk')) {
          selectedFile = file
          fileType = fileTypeValues.apk
        } else if (file.name.endsWith('.msi')) {
          selectedFile = file
          fileType = fileTypeValues.desktopApp
        } else {
          $errorMessage.innerText =
            'Tipo de archivo no permitido, solo se admiten estos tipos (.apk | .msi)'
          return
        }

        $fileSpan.classList.add('hidden')
        $fileMessageContainer.innerHTML = `
          <div>
            <p class="text-gray-200 font-semibold">Archivo seleccionado:</p>
          </div>
          <div>
            <p class="text-gray-400">Tipo:</p>
            <p class="text-gray-200 font-medium">
              ${selectedFile.name.endsWith('.apk') ? 'Android App' : 'Aplicaci칩n de escritorio'}
            </p>
          </div>
          <div>
            <p class="text-gray-400 mr-1">Tama침o:</p>
            <p>${(Number(file.size) / (1024 * 1024)).toFixed(2)} MB</p>
          </div>
          <div>
            <p class="text-gray-400">Archivo:</p>
            <p class="overflow-hidden overflow-ellipsis">${selectedFile.name}</p>
          </div>
          <div class="mt-4">
            <div class="text-gray-400">Click para seleccionar otro archivo</div>
          </div>
        `
        $fileMessageContainer.classList.remove('hidden')
      })
    })

    $uploadFileForm.addEventListener('submit', async (e) => {
      e.preventDefault()
      $successMessage.innerText = ''
      $errorMessage.innerText = ''

      const formData = new FormData($uploadFileForm)

      const { data, error } = uploadFileValidator(Object.fromEntries(formData))

      if (error != null) {
        $errorMessage.innerText = error.message
        console.log(error)
        return
      }

      if (selectedFile == null) {
        $errorMessage.innerText = 'Seleccione el archivo a subir'
        return
      }

      const { error: uploadError } = await uploadApk({
        nombre: data.nombre,
        tipo: fileType,
        visible: data.visible,
        appFile: selectedFile
      })

      if (uploadError) {
        $errorMessage.innerText = uploadError.message
        return
      }

      $successMessage.innerText = 'El archivo se ha subido correctamente'
    })

    const $clearFormButton = selectWith<HTMLButtonElement>('#clear-form')

    $clearFormButton.addEventListener('click', () => {
      $uploadFileForm.reset()
      selectedFile = null
      fileType = ''
      $fileSpan.classList.remove('hidden')
      $fileMessageContainer.classList.add('hidden')
      $fileMessageContainer.innerHTML = ''
    })
  })()
</script>
