---
import { fileTypeValues } from '@/core/consts'
import BaseLayout from '@/layouts/BaseLayout.astro'
import Button from '@/components/atoms/Button.astro'
import Input from '@/components/atoms/Input.astro'
import Label from '@/components/atoms/Label.astro'
import { FileList, FetchButton } from '@/components/solidjs/FileList'
import UserBadge from '@/components/ui/UserBadge.astro'
---

<BaseLayout title="Dashboard">
  <section class="flex w-full items-stretch">
    <div class="hidden md:flex p-2">
      <aside
        class="left-2 top-2 bottom-2 w-[280px] rounded-lg h-full
        bg-gray-300/5 backdrop-blur-md border border-white/10 flex flex-col justify-between"
      >
        <header class="p-3 flex items-center justify-between">
          <h2 class="text-xl font-medium">Archivos</h2>
          <FetchButton client:visible />
        </header>
        <FileList client:load />
        <footer class="p-3">
          <UserBadge />
        </footer>
      </aside>
    </div>

    <div class="grow p-2 flex flex-col">
      <div
        class="border-white/10 rounded-lg bg-black/10 h-full border-3 border-dashed p-4"
      >
        <h1 class="text-2xl font-medium mb-6">Subir archivos</h1>

        <section class="container mx-auto">
          <div class="space-y-4">
            <h2 class="font-medium text-gray-300">
              Subir apk o aplicación de escritorio
            </h2>
            <form class="flex flex-col space-y-4" id="upload-file-form">
              <div class="grid md:grid-cols-2 gap-4">
                <div class="flex flex-col space-y-4">
                  <Label text="Nombre">
                    <Input
                      name="nombre"
                      type="text"
                      autocomplete="off"
                      placeholder="Apk en alpha version 0.216.58"
                    />
                  </Label>

                  <Label text="Tipo">
                    <select
                      name="tipo"
                      class="px-3 py-2 border border-white/30 h-full
                      bg-gray-500/5 hover:bg-gray-300/5
                      transition-colors rounded-md
                      hover:border-white/60"
                    >
                      <option value="null" selected disabled>
                        Seleccione un tipo
                      </option>
                      <option value={fileTypeValues.apk}> APK </option>
                      <option value={fileTypeValues.desktopApp}>
                        Aplicación de escritorio
                      </option>
                    </select>
                  </Label>

                  <label class="flex items-center gap-2">
                    <input type="checkbox" name="visible" />
                    <span class="text-sm select-none">
                      Visible para todos los usuarios
                    </span>
                  </label>
                </div>

                <label
                  class="border-3 border-dashed rounded-2xl p-8 min-h-48 md:min-h-72
                  border-white/30 bg-gray-500/5 hover:bg-gray-300/5 transition-colors
                  text-gray-400 hover:text-gray-300 flex justify-center items-center"
                >
                  <span class="font-semibold">Seleccione un archivo</span>
                  <input
                    id="app-file-input"
                    name="app_file"
                    type="file"
                    hidden
                  />
                </label>
              </div>

              <div class="flex flex-wrap justify-end gap-4">
                <button
                  id="cancel"
                  type="button"
                  class="border-white/10 rounded-lg border text-sm px-5 py-3 hover:bg-white/15 hover:border-white/50 transition-colors"
                >
                  Cancelar
                </button>
                <Button type="submit">Subir</Button>
              </div>
              <div
                id="error-message-upload-file-form"
                class="text-sm font-medium text-red-300"
              >
              </div>
              <div
                id="success-message-upload-file-form"
                class="text-sm font-medium text-green-300 mt-3"
              >
              </div>
            </form>
          </div>
        </section>

        <p id="error-message" class="text-sm font-medium text-red-300"></p>
      </div>
    </div>
  </section>
</BaseLayout>

<script>
  import { uploadApk } from '@/core/controllers/archivos'
  import { selectWith } from '@/core/lib/utils'
  import { uploadFileValidator } from '@/core/validators/uploadFileDto'
  ;(async () => {
    const $uploadFileForm = selectWith<HTMLFormElement>('#upload-file-form')
    const $uploadFileFormSuccessMessage = selectWith<HTMLFormElement>(
      '#success-message-upload-file-form'
    )
    const $uploadFileFormErrorMessage = selectWith<HTMLFormElement>(
      '#error-message-upload-file-form'
    )

    const $appFileInput = selectWith<HTMLInputElement>('#app-file-input')
    let selectedFile: null | File = null

    $appFileInput.addEventListener('change', (e) => {
      const input = e.target as HTMLInputElement
      if (input.files && input.files.length > 0) {
        selectedFile = input.files[0]

        if (selectedFile.type === '' && selectedFile.name.endsWith('.apk')) {
          selectedFile = new File([selectedFile], selectedFile.name, {
            type: 'application/vnd.android.package-archive'
          })
        }

        console.log('Selected file', selectedFile)
      }
    })

    $uploadFileForm.addEventListener('submit', async (e) => {
      e.preventDefault()
      $uploadFileFormSuccessMessage.innerText = ''
      $uploadFileFormErrorMessage.innerText = ''

      const formData = new FormData($uploadFileForm)

      const { data, error } = uploadFileValidator(Object.fromEntries(formData))

      if (error != null) {
        $uploadFileFormErrorMessage.innerText = error.message
        console.log(error)
        return
      }

      if (selectedFile == null) {
        $uploadFileFormErrorMessage.innerText = 'Seleccione el archivo a subir'
        return
      }

      const { data: uploadData, error: uploadError } = await uploadApk({
        nombre: data.nombre,
        tipo: data.tipo,
        visible: data.visible,
        appFile: selectedFile
      })

      if (uploadError) {
        $uploadFileFormErrorMessage.innerText = uploadError.message
        return
      }

      $uploadFileFormSuccessMessage.innerText = JSON.stringify(uploadData)
      // 'El archivo se ha subido correctamente'
    })
  })()
</script>
